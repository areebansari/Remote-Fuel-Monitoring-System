#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FuelMonitoring
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RemFMDB")]
	public partial class FuelMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCardMonitor(CardMonitor instance);
    partial void UpdateCardMonitor(CardMonitor instance);
    partial void DeleteCardMonitor(CardMonitor instance);
    partial void InsertFillReadingData(FillReadingData instance);
    partial void UpdateFillReadingData(FillReadingData instance);
    partial void DeleteFillReadingData(FillReadingData instance);
    partial void InsertErrorCommLog(ErrorCommLog instance);
    partial void UpdateErrorCommLog(ErrorCommLog instance);
    partial void DeleteErrorCommLog(ErrorCommLog instance);
    #endregion
		
		public FuelMDataContext() : 
				base(global::FuelMonitoring.Properties.Settings.Default.RemFMDBConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public FuelMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FuelMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FuelMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FuelMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CardMonitor> CardMonitors
		{
			get
			{
				return this.GetTable<CardMonitor>();
			}
		}
		
		public System.Data.Linq.Table<FillReadingData> FillReadingDatas
		{
			get
			{
				return this.GetTable<FillReadingData>();
			}
		}
		
		public System.Data.Linq.Table<ErrorCommLog> ErrorCommLogs
		{
			get
			{
				return this.GetTable<ErrorCommLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CardMonitor")]
	public partial class CardMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Slaveside;
		
		private System.Nullable<int> _Serialno;
		
		private System.Nullable<int> _Fillcounter;
		
		private System.Nullable<System.DateTime> _Datetime;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _DeActiveDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSlavesideChanging(string value);
    partial void OnSlavesideChanged();
    partial void OnSerialnoChanging(System.Nullable<int> value);
    partial void OnSerialnoChanged();
    partial void OnFillcounterChanging(System.Nullable<int> value);
    partial void OnFillcounterChanged();
    partial void OnDatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDatetimeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDeActiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeActiveDateChanged();
    #endregion
		
		public CardMonitor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slaveside", DbType="VarChar(50)")]
		public string Slaveside
		{
			get
			{
				return this._Slaveside;
			}
			set
			{
				if ((this._Slaveside != value))
				{
					this.OnSlavesideChanging(value);
					this.SendPropertyChanging();
					this._Slaveside = value;
					this.SendPropertyChanged("Slaveside");
					this.OnSlavesideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serialno", DbType="Int")]
		public System.Nullable<int> Serialno
		{
			get
			{
				return this._Serialno;
			}
			set
			{
				if ((this._Serialno != value))
				{
					this.OnSerialnoChanging(value);
					this.SendPropertyChanging();
					this._Serialno = value;
					this.SendPropertyChanged("Serialno");
					this.OnSerialnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fillcounter", DbType="Int")]
		public System.Nullable<int> Fillcounter
		{
			get
			{
				return this._Fillcounter;
			}
			set
			{
				if ((this._Fillcounter != value))
				{
					this.OnFillcounterChanging(value);
					this.SendPropertyChanging();
					this._Fillcounter = value;
					this.SendPropertyChanged("Fillcounter");
					this.OnFillcounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Datetime
		{
			get
			{
				return this._Datetime;
			}
			set
			{
				if ((this._Datetime != value))
				{
					this.OnDatetimeChanging(value);
					this.SendPropertyChanging();
					this._Datetime = value;
					this.SendPropertyChanged("Datetime");
					this.OnDatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeActiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeActiveDate
		{
			get
			{
				return this._DeActiveDate;
			}
			set
			{
				if ((this._DeActiveDate != value))
				{
					this.OnDeActiveDateChanging(value);
					this.SendPropertyChanging();
					this._DeActiveDate = value;
					this.SendPropertyChanged("DeActiveDate");
					this.OnDeActiveDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FillReadingData")]
	public partial class FillReadingData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FillID;
		
		private string _FillTime;
		
		private string _FillDate;
		
		private string _Slaveno;
		
		private string _Slaveside;
		
		private System.Nullable<int> _Fillcounter;
		
		private System.Nullable<decimal> _KG;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<decimal> _NonResetTot;
		
		private System.Nullable<decimal> _ResetableTot;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _Serialno;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFillIDChanging(int value);
    partial void OnFillIDChanged();
    partial void OnFillTimeChanging(string value);
    partial void OnFillTimeChanged();
    partial void OnFillDateChanging(string value);
    partial void OnFillDateChanged();
    partial void OnSlavenoChanging(string value);
    partial void OnSlavenoChanged();
    partial void OnSlavesideChanging(string value);
    partial void OnSlavesideChanged();
    partial void OnFillcounterChanging(System.Nullable<int> value);
    partial void OnFillcounterChanged();
    partial void OnKGChanging(System.Nullable<decimal> value);
    partial void OnKGChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnNonResetTotChanging(System.Nullable<decimal> value);
    partial void OnNonResetTotChanged();
    partial void OnResetableTotChanging(System.Nullable<decimal> value);
    partial void OnResetableTotChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnSerialnoChanging(System.Nullable<int> value);
    partial void OnSerialnoChanged();
    #endregion
		
		public FillReadingData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FillID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FillID
		{
			get
			{
				return this._FillID;
			}
			set
			{
				if ((this._FillID != value))
				{
					this.OnFillIDChanging(value);
					this.SendPropertyChanging();
					this._FillID = value;
					this.SendPropertyChanged("FillID");
					this.OnFillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FillTime", DbType="VarChar(50)")]
		public string FillTime
		{
			get
			{
				return this._FillTime;
			}
			set
			{
				if ((this._FillTime != value))
				{
					this.OnFillTimeChanging(value);
					this.SendPropertyChanging();
					this._FillTime = value;
					this.SendPropertyChanged("FillTime");
					this.OnFillTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FillDate", DbType="VarChar(50)")]
		public string FillDate
		{
			get
			{
				return this._FillDate;
			}
			set
			{
				if ((this._FillDate != value))
				{
					this.OnFillDateChanging(value);
					this.SendPropertyChanging();
					this._FillDate = value;
					this.SendPropertyChanged("FillDate");
					this.OnFillDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slaveno", DbType="NVarChar(50)")]
		public string Slaveno
		{
			get
			{
				return this._Slaveno;
			}
			set
			{
				if ((this._Slaveno != value))
				{
					this.OnSlavenoChanging(value);
					this.SendPropertyChanging();
					this._Slaveno = value;
					this.SendPropertyChanged("Slaveno");
					this.OnSlavenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slaveside", DbType="NVarChar(50)")]
		public string Slaveside
		{
			get
			{
				return this._Slaveside;
			}
			set
			{
				if ((this._Slaveside != value))
				{
					this.OnSlavesideChanging(value);
					this.SendPropertyChanging();
					this._Slaveside = value;
					this.SendPropertyChanged("Slaveside");
					this.OnSlavesideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fillcounter", DbType="Int")]
		public System.Nullable<int> Fillcounter
		{
			get
			{
				return this._Fillcounter;
			}
			set
			{
				if ((this._Fillcounter != value))
				{
					this.OnFillcounterChanging(value);
					this.SendPropertyChanging();
					this._Fillcounter = value;
					this.SendPropertyChanged("Fillcounter");
					this.OnFillcounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KG", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> KG
		{
			get
			{
				return this._KG;
			}
			set
			{
				if ((this._KG != value))
				{
					this.OnKGChanging(value);
					this.SendPropertyChanging();
					this._KG = value;
					this.SendPropertyChanged("KG");
					this.OnKGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonResetTot", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NonResetTot
		{
			get
			{
				return this._NonResetTot;
			}
			set
			{
				if ((this._NonResetTot != value))
				{
					this.OnNonResetTotChanging(value);
					this.SendPropertyChanging();
					this._NonResetTot = value;
					this.SendPropertyChanged("NonResetTot");
					this.OnNonResetTotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetableTot", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ResetableTot
		{
			get
			{
				return this._ResetableTot;
			}
			set
			{
				if ((this._ResetableTot != value))
				{
					this.OnResetableTotChanging(value);
					this.SendPropertyChanging();
					this._ResetableTot = value;
					this.SendPropertyChanged("ResetableTot");
					this.OnResetableTotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serialno", DbType="Int")]
		public System.Nullable<int> Serialno
		{
			get
			{
				return this._Serialno;
			}
			set
			{
				if ((this._Serialno != value))
				{
					this.OnSerialnoChanging(value);
					this.SendPropertyChanging();
					this._Serialno = value;
					this.SendPropertyChanged("Serialno");
					this.OnSerialnoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorCommLog")]
	public partial class ErrorCommLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Counter;
		
		private string _Dispensor;
		
		private System.Nullable<System.DateTime> _DateTime;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCounterChanging(System.Nullable<int> value);
    partial void OnCounterChanged();
    partial void OnDispensorChanging(string value);
    partial void OnDispensorChanged();
    partial void OnDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public ErrorCommLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counter", DbType="Int")]
		public System.Nullable<int> Counter
		{
			get
			{
				return this._Counter;
			}
			set
			{
				if ((this._Counter != value))
				{
					this.OnCounterChanging(value);
					this.SendPropertyChanging();
					this._Counter = value;
					this.SendPropertyChanged("Counter");
					this.OnCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dispensor", DbType="NVarChar(50)")]
		public string Dispensor
		{
			get
			{
				return this._Dispensor;
			}
			set
			{
				if ((this._Dispensor != value))
				{
					this.OnDispensorChanging(value);
					this.SendPropertyChanging();
					this._Dispensor = value;
					this.SendPropertyChanged("Dispensor");
					this.OnDispensorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
